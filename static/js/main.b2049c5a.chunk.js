(this["webpackJsonpxstate-react-typescript-template"]=this["webpackJsonpxstate-react-typescript-template"]||[]).push([[0],{29:function(t,e,n){},40:function(t,e,n){"use strict";n.r(e);var o=n(26),a=n(12),c=(n(29),n(7),n(23)),s=n(20),r=n(2),i=n(10),l=n(44),m=n(43);function d(t){return Object(r.q)((e=>({type:"SPEAK",value:t})))}function p(){return Object(r.q)("LISTEN")}function y(t,e){for(var n=void 0,o=void 0,a=void 0,c=t.split(" "),s=0;s<c.length;s+=1)if("person"in(e[c[s]]||{}))n=c[s];else if("day"in(e[c[s]]||{}))a=c[s];else if("at"===c[s]){"time"in(e[c[s].concat(" ",c[s+1])]||{})&&(o=c[s+1])}return{person_to_meet:n,day_to_meet:a,time_to_meet:o}}const u={John:{person:"John Appleseed"},Jack:{person:"Jack Jackson"},Anna:{person:"Anna"},"on Monday":{day:"Monday"},Monday:{day:"Monday"},"on Tuesday":{day:"Tuesday"},Tuesday:{day:"Tuesday"},"on Wednesday":{day:"Wednesday"},Wednesday:{day:"Wednesday"},"on Thursday":{day:"Thursday"},Thursday:{day:"Thursday"},"on Friday":{day:"Friday"},Friday:{day:"Friday"},"on Saturday":{day:"Saturday"},Saturday:{day:"Saturday"},"on Sunday":{day:"Sunday"},Sunday:{day:"Sunday"},"at 1 a.m.":{time:"1:00"},"at 2 a.m.":{time:"2:00"},"at 3 a.m.":{time:"3:00"},"at 4 a.m.":{time:"4:00"},"at 5 a.m.":{time:"5:00"},"at 6 a.m.":{time:"6:00"},"at 7 a.m.":{time:"7:00"},"at 8":{time:"8:00"},"at 9":{time:"9:00"},"at 10":{time:"10:00"},"at 11":{time:"11:00"},"at 12":{time:"12:00"},"at 1":{time:"13:00"},"at 2":{time:"14:00"},"at 3":{time:"15:00"},"at 4":{time:"16:00"},"at 5":{time:"17:00"},"at 6":{time:"18:00"},"at 7":{time:"19:00"},"at 8 p.m.":{time:"20:00"},"at 9 p.m.":{time:"21:00"},"at 10 p.m.":{time:"22:00"},"at 11 p.m.":{time:"23:00"},"at midnight":{time:"00:00"},quit:{cancel:"cancel"},cancel:{cancel:"cancel"},nevermind:{cancel:"cancel"}},E={yes:{yes:!0},yep:{yes:!0},"of course":{yes:!0},sure:{yes:!0},no:{no:!1},"no way":{no:!1},nope:{no:!1}},b={initial:"init",states:{init:{on:{CLICK:"welcome"}},welcome:{initial:"prompt",on:{RECOGNISED:{target:"invoke_rasa"}},states:{prompt:{entry:d("What do you want to do?"),on:{ENDSPEECH:"ask"}},ask:{entry:p()}}},invoke_rasa:{invoke:{id:"rasa",src:(t,e)=>g(t.recResult),onDone:{target:"answer",actions:[Object(r.b)(((t,e)=>({intentResult:e.data.intent.name}))),Object(r.q)("RASA_DONE")]},onError:{target:"welcome",actions:(t,e)=>console.log(e.data)}}},answer:{on:{RASA_DONE:[{cond:t=>"add_todo_item"==t.intentResult,actions:t=>console.log("<< TODO: "+t.intentResult),target:"todo"},{cond:t=>"make_appointment"==t.intentResult,actions:t=>console.log("<< APP: "+t.intentResult),target:"who"},{cond:t=>"set_timer"==t.intentResult,actions:t=>console.log("<< TIMER: "+t.intentResult),target:"timer"}]}},who:{initial:"prompt",on:{RECOGNISED:[{actions:[Object(r.b)((t=>(console.log(t.recResult),console.log(y(t.recResult,u)),{appointmentData:y(t.recResult,u)}))),Object(r.q)("DATA_STORED")]}],DATA_STORED:[{actions:[Object(r.b)((t=>(console.log(y(t.recResult,u).person_to_meet),{person:y(t.recResult,u).person_to_meet}))),Object(r.b)((t=>(console.log(y(t.recResult,u).day_to_meet),{day:y(t.recResult,u).day_to_meet}))),Object(r.b)((t=>(console.log(y(t.recResult,u).time_to_meet),{time:y(t.recResult,u).time_to_meet})))],target:"sendnext"}]},states:{prompt:{entry:d("Okay, what are the details of the meeting you want to set up?"),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I don't know them"),on:{ENDSPEECH:"prompt"}}}},sendnext:{entry:Object(r.q)("DIRECT"),on:{DIRECT:[{cond:t=>void 0!=t.person&&void 0!=t.day&&void 0!=t.time,target:"confirmtime"},{cond:t=>void 0!=t.person&&void 0!=t.day,target:"allday"},{cond:t=>void 0!=t.day&&void 0!=t.time,target:"missing_person"},{cond:t=>void 0!=t.person&&void 0!=t.time,target:"missing_day"},{cond:t=>void 0!=t.person,target:"day"},{cond:t=>void 0!=t.day,target:"day_only"},{cond:t=>void 0!=t.time,target:"time_only"}]}},missing_person:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"person"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({person:u[t.recResult].person}))),target:"confirmtime"},{cond:t=>"cancel"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({cancel:u[t.recResult].cancel}))),target:"init"},{target:".nomatch"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"OK. ".concat(t.day," at ").concat(t.time,". With who are you meeting?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},missing_day:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"day"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({day:u[t.recResult].day}))),target:"confirmtime"},{cond:t=>"cancel"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({cancel:u[t.recResult].cancel}))),target:"init"},{target:".nomatch"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"OK. With ".concat(t.person," at ").concat(t.time,". On which day is your meeting?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},day:{initial:"prompt",on:{RECOGNISED:[{actions:[Object(r.b)((t=>(console.log(t.recResult),console.log(y(t.recResult,u)),{appointmentData:y(t.recResult,u)}))),Object(r.q)("DATA_STORED")]}],DATA_STORED:[{actions:[Object(r.b)((t=>(console.log(y(t.recResult,u).day_to_meet),{day:y(t.recResult,u).day_to_meet}))),Object(r.b)((t=>(console.log(y(t.recResult,u).time_to_meet),{time:y(t.recResult,u).time_to_meet})))],target:"sendnext"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Okay, lets create an appointment with ".concat(t.person,". When is the meeting?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I did't catch that"),on:{ENDSPEECH:"prompt"}}}},time_only:{initial:"prompt",on:{RECOGNISED:[{actions:[Object(r.b)((t=>(console.log(t.recResult),console.log(y(t.recResult,u)),{appointmentData:y(t.recResult,u)}))),Object(r.q)("DATA_STORED")]}],DATA_STORED:[{actions:[Object(r.b)((t=>(console.log(y(t.recResult,u).person_to_meet),{person:y(t.recResult,u).person_to_meet}))),Object(r.b)((t=>(console.log(y(t.recResult,u).day_to_meet),{day:y(t.recResult,u).day_to_meet})))],target:"sendnext"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Okay, lets create an appointment at ".concat(t.time,". Who are you meeting with? And on which day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I did't catch that"),on:{ENDSPEECH:"prompt"}}}},day_only:{initial:"prompt",on:{RECOGNISED:[{actions:[Object(r.b)((t=>(console.log(t.recResult),console.log(y(t.recResult,u)),{appointmentData:y(t.recResult,u)}))),Object(r.q)("DATA_STORED")]}],DATA_STORED:[{actions:[Object(r.b)((t=>(console.log(y(t.recResult,u).person_to_meet),{person:y(t.recResult,u).person_to_meet}))),Object(r.b)((t=>(console.log(y(t.recResult,u).time_to_meet),{time:y(t.recResult,u).time_to_meet})))],target:"sendnext"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Okay, lets create an appointment on ".concat(t.day,". Who are you meeting with? And at what time?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I did't catch that"),on:{ENDSPEECH:"prompt"}}}},allday:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yes"in(E[t.recResult]||{}),actions:Object(r.b)((t=>({confirm:E[t.recResult].yes}))),target:"confirmallday"},{cond:t=>"no"in(E[t.recResult]||{}),actions:Object(r.b)((t=>({confirm:E[t.recResult].no}))),target:"time"},{cond:t=>"cancel"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({cancel:u[t.recResult].cancel}))),target:"init"},{target:".nomatch"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"OK. ".concat(t.day,". Is your meeting all day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},confirmallday:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yes"in(E[t.recResult]||{}),actions:Object(r.b)((t=>({confirm:E[t.recResult].yes}))),target:"meetingbooked"},{cond:t=>"no"in(E[t.recResult]||{}),actions:Object(r.b)((t=>({confirm:E[t.recResult].no}))),target:"who"},{cond:t=>"cancel"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({cancel:u[t.recResult].cancel}))),target:"init"},{target:".nomatch"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Do you want me to create an appointment with ".concat(t.person," on ").concat(t.day," for the whole day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},time:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"time"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({time:u[t.recResult].time}))),target:"confirmtime"},{cond:t=>"cancel"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({cancel:u[t.recResult].cancel}))),target:"init"},{target:".nomatch"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"OK. At what time is your meeting?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},confirmtime:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yes"in(E[t.recResult]||{}),actions:Object(r.b)((t=>({confirm:E[t.recResult].yes}))),target:"meetingbooked"},{cond:t=>"no"in(E[t.recResult]||{}),actions:Object(r.b)((t=>({confirm:E[t.recResult].no}))),target:"who"},{cond:t=>"cancel"in(u[t.recResult]||{}),actions:Object(r.b)((t=>({cancel:u[t.recResult].cancel}))),target:"init"},{target:".nomatch"}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Do you want me to create an appointment with ".concat(t.person," on ").concat(t.day," at ").concat(t.time,"?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:p()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},meetingbooked:{initial:"prompt",on:{ENDSPEECH:"init"},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Your appointment has been created!"})))}}},todo:{initial:"prompt",states:{prompt:{entry:d("Okay, let's create a new to do item.")}},on:{ENDSPEECH:"init"}},timer:{initial:"prompt",states:{prompt:{entry:d("Okay, let's set a timer.")}},on:{ENDSPEECH:"init"}}}},g=t=>fetch(new Request("https://cors-anywhere.herokuapp.com/https://rasa-nlu-heroku.herokuapp.com/model/parse",{method:"POST",body:'{"text": "'.concat(t,'"}')})).then((t=>t.json()));var O=n(22),R=n(13);const h=i.a.send,S=i.a.cancel;Object(m.a)({url:"https://statecharts.io/inspect",iframe:!1});const j=Object(s.a)({id:"root",type:"parallel",states:{dm:Object(a.a)({},b),asrtts:{initial:"idle",states:{idle:{on:{LISTEN:"recognising",SPEAK:{target:"speaking",actions:Object(r.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{initial:"progress",entry:"recStart",exit:"recStop",on:{ASRRESULT:{actions:["recLogResult",Object(r.b)(((t,e)=>({recResult:e.value})))],target:".match"},RECOGNISED:{target:"idle",actions:[Object(r.b)((t=>({counter:t.counter=0}))),S("maxsp")]},MAXSPEECH:{target:"idle",actions:Object(r.b)((t=>t.counter?{counter:t.counter+1}:{counter:1}))}},states:{progress:{},match:{entry:h("RECOGNISED")}}},speaking:{entry:"ttsStart",on:{ENDSPEECH:"idle"}}}}}},{actions:{recLogResult:t=>{console.log("<< ASR: "+t.recResult)},test:()=>{console.log("test")},logIntent:t=>{console.log("<< NLU intent: "+t.nluData.intent.name)}}}),D=t=>{switch(!0){case t.state.matches({asrtts:"recognising"}):return Object(R.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"glowing 20s linear"}},t),{},{children:"Listening..."}));case t.state.matches({asrtts:"speaking"}):return Object(R.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"bordering 1s infinite"}},t),{},{children:"Speaking..."}));default:return Object(R.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover"},t),{},{children:"Click to start"}))}};function _(){const t=Object(O.useSpeechSynthesis)({onEnd:()=>{d("ENDSPEECH")}}),e=t.speak,n=t.cancel,a=(t.speaking,Object(O.useSpeechRecognition)({onResult:t=>{d({type:"ASRRESULT",value:t})}})),c=a.listen,s=(a.listening,a.stop),r=Object(l.b)(j,{devTools:!0,actions:{recStart:Object(l.a)((()=>{console.log("Ready to receive a color command."),c({interimResults:!1,continuous:!0})})),recStop:Object(l.a)((()=>{console.log("Recognition stopped."),s()})),changeColour:Object(l.a)((t=>{console.log("Repainting..."),document.body.style.background=t.recResult})),ttsStart:Object(l.a)(((t,n)=>{console.log("Speaking..."),e({text:t.ttsAgenda})})),ttsCancel:Object(l.a)(((t,e)=>{console.log("TTS STOP..."),n()}))}}),i=Object(o.a)(r,3),m=i[0],d=i[1];i[2];return Object(R.jsx)("div",{className:"App",children:Object(R.jsx)(D,{state:m,onClick:()=>d("CLICK")})})}const k=document.getElementById("root");c.render(Object(R.jsx)(_,{}),k)}},[[40,1,2]]]);
//# sourceMappingURL=main.b2049c5a.chunk.js.map